# vim:set ft=tmux:

# set-option -g default-command "reattach-to-user-namespace -l zsh"

# look good
# set -g default-terminal "screen-256color"
# # set -g terminal-overrides ",xterm-256color:Tc"
# set -g terminal-overrides ",xterm-256color:RBG"
set -g default-terminal "tmux-256color"
# Tell Tmux that outside terminal supports true color
set-option -sa terminal-overrides ",tmux-256color:RGB"

# Start window counting at 1
set -g base-index 1
setw -g pane-base-index 1

# Turn on mouse
# set-option -g mouse-select-pane on
# set-option -g mouse-select-window on
# set-window-option -g mode-mouse on
set -g mouse on

# Vim mode
setw -g mode-keys vi

# nightfox theme
# https://github.com/EdenEast/nightfox.nvim/blob/main/extra/nightfox/nightfox_tmux.tmux
set -g mode-style "fg=#131a24,bg=#aeafb0"
set -g message-style "fg=#131a24,bg=#aeafb0"
set -g message-command-style "fg=#131a24,bg=#aeafb0"
set -g pane-border-style "fg=#aeafb0"
set -g pane-active-border-style "fg=#719cd6"
set -g status "on"
set -g status-justify "left"
set -g status-style "fg=#aeafb0,bg=#131a24"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-left-style NONE
set -g status-right-style NONE
set -g status-left "#[fg=#131a24,bg=#719cd6,bold] #S #[fg=#719cd6,bg=#131a24,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=#131a24,bg=#131a24,nobold,nounderscore,noitalics]#[fg=#719cd6,bg=#131a24] #{prefix_highlight} #[fg=#aeafb0,bg=#131a24,nobold,nounderscore,noitalics]#[fg=#131a24,bg=#aeafb0] %Y-%m-%d  %I:%M %p #[fg=#719cd6,bg=#aeafb0,nobold,nounderscore,noitalics]#[fg=#131a24,bg=#719cd6,bold] #h "
setw -g window-status-activity-style "underscore,fg=#71839b,bg=#131a24"
setw -g window-status-separator ""
setw -g window-status-style "NONE,fg=#71839b,bg=#131a24"
setw -g window-status-format "#[fg=#131a24,bg=#131a24,nobold,nounderscore,noitalics]#[default] #I  #W #F #[fg=#131a24,bg=#131a24,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=#131a24,bg=#aeafb0,nobold,nounderscore,noitalics]#[fg=#131a24,bg=#aeafb0,bold] #I  #W #F #[fg=#aeafb0,bg=#131a24,nobold,nounderscore,noitalics]"

# # soften status bar color from harsh green to light gray
# set -g status-bg '#666666'
# set -g status-fg '#aaaaaa'
# # setw -g window-status-attr dim
# # setw -g window-status-current-fg white
# # setw -g window-status-current-bg red
# # setw -g window-status-current-attr bright

# Set window sizes
setw -g main-pane-width 200
setw -g main-pane-height 45

# # Status bar
# # set -g status-utf8 on
# set -g status-left-length 40
# set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
# set -g status-right "#[fg=cyan]%d %b %R"

# Set divider colors
# set -g pane-border-fg green
# set -g pane-border-bg black
# set -g pane-active-border-fg white
# set -g pane-active-border-bg yellow

# Activity monitor
setw -g monitor-activity on
set -g visual-activity on

# Binds {{{
# Prefix
# unbind C-b
# set-option -g prefix C-a
# bind C-a send-prefix

# Set delay time
set -sg escape-time 1

# Reload
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# increase scrollback lines
set -g history-limit 10000

# hsplit
unbind %
bind | split-window -h -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'

# vsplit
unbind '"'
bind - split-window -v -c '#{pane_current_path}'

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Battery
# set -g status-right "#(~/battery Discharging) | #[fg=cyan]%d %b %R"
set -g status-right "#(battery -t) | #[fg=cyan]%d %b %R"

# Vim integration
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"

# Setup 'v' to begin selection as in Vim
# bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
# bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel

# # bind-key -t vi-copy v begin-selection
# # bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
# # bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
# bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel
#
# # Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Switch windows using Alt-arrow without prefix
bind-key -n M-Left previous-window
bind-key -n M-Right next-window

# switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

set-option -g focus-events on
